use UNIVER

-- 1
SELECT
	min(AUDITORIUM.AUDITORIUM_CAPACITY) [Минимальная],
	max(AUDITORIUM.AUDITORIUM_CAPACITY) [Максимальная],
	avg(AUDITORIUM.AUDITORIUM_CAPACITY) [Средняя],
	sum(AUDITORIUM.AUDITORIUM_CAPACITY) [Суммарная],
	count(*) [Количество аудиторий]
FROM AUDITORIUM;

-- 2
SELECT
	AUDITORIUM_TYPE.AUDITORIUM_TYPENAME,
	min(AUDITORIUM.AUDITORIUM_CAPACITY) [Минимальная],
	max(AUDITORIUM.AUDITORIUM_CAPACITY) [Максимальная],
	avg(AUDITORIUM.AUDITORIUM_CAPACITY) [Средняя],
	sum(AUDITORIUM.AUDITORIUM_CAPACITY) [Суммарная],
	count(AUDITORIUM.AUDITORIUM_TYPE) [Общее кол-во]
FROM AUDITORIUM
inner join AUDITORIUM_TYPE on AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE
GROUP BY AUDITORIUM_TYPE.AUDITORIUM_TYPENAME;

-- 3
SELECT *
FROM (
	SELECT 
		CASE
			when (PROGRESS.NOTE = 10) then '10'
			when (PROGRESS.NOTE in (8, 9)) then '8-9'
			when (PROGRESS.NOTE in (6, 7)) then '6-7'
			when (PROGRESS.NOTE in (4, 5)) then '4-5'
		END [Оценки],
		count(*) [Количество]
	FROM PROGRESS
	GROUP BY
		CASE
			when (PROGRESS.NOTE = 10) then '10'
			when (PROGRESS.NOTE IN (8, 9)) then '8-9'
			when (PROGRESS.NOTE IN (6, 7)) then '6-7'
			when (PROGRESS.NOTE IN (4, 5)) then '4-5'
		END
) AS T
ORDER BY
	CASE [Оценки]
		when '10' then 1
		when '8-9' then 2
		when '6-7' then 3
		when '4-5' then 4
		else 0
	END;

-- 4
SELECT
	FACULTY.FACULTY,
	GROUPS.PROFESSION,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM FACULTY
inner join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
inner join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
GROUP BY
	FACULTY.FACULTY,
	GROUPS.PROFESSION
ORDER BY [Average_Note];

SELECT
	FACULTY.FACULTY,
	GROUPS.PROFESSION,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM FACULTY
inner join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
inner join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE PROGRESS.SUBJECT in ('СУБД', 'ОАиП')
GROUP BY
	FACULTY.FACULTY,
	GROUPS.PROFESSION
ORDER BY [Average_Note];

-- 5
SELECT
	FACULTY.FACULTY,
	GROUPS.PROFESSION,
	PROGRESS.SUBJECT,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM FACULTY
inner join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
inner join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ИДиП'
GROUP BY ROLLUP(GROUPS.PROFESSION, FACULTY.FACULTY, PROGRESS.SUBJECT);

-- 6
SELECT
	FACULTY.FACULTY,
	GROUPS.PROFESSION,
	PROGRESS.SUBJECT,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM FACULTY
inner join GROUPS on FACULTY.FACULTY = GROUPS.FACULTY
inner join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE FACULTY.FACULTY = 'ИДиП'
GROUP BY CUBE(GROUPS.PROFESSION, FACULTY.FACULTY, PROGRESS.SUBJECT);

-- 7
SELECT
	GROUPS.FACULTY,
	GROUPS.PROFESSION,
	PROGRESS.SUBJECT,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM GROUPS
inner join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE GROUPS.FACULTY = 'ИТ'
GROUP BY GROUPS.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
UNION
SELECT
	GROUPS.FACULTY,
	GROUPS.PROFESSION,
	PROGRESS.SUBJECT,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM GROUPS
inner join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE GROUPS.FACULTY = 'ИДиП'
GROUP BY GROUPS.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
ORDER BY [Average_Note] DESC;

SELECT
	GROUPS.FACULTY,
	GROUPS.PROFESSION,
	PROGRESS.SUBJECT,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM GROUPS
inner join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE GROUPS.FACULTY = 'ИТ'
GROUP BY GROUPS.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
UNION ALL
SELECT
	GROUPS.FACULTY,
	GROUPS.PROFESSION,
	PROGRESS.SUBJECT,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM GROUPS
inner join STUDENT on STUDENT.IDGROUP = GROUPS.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE GROUPS.FACULTY = 'ИДиП'
GROUP BY GROUPS.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
ORDER BY [Average_Note] DESC;

-- 8
SELECT
	GROUPS.FACULTY,
	GROUPS.PROFESSION,
	PROGRESS.SUBJECT,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM GROUPS
inner join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE GROUPS.FACULTY = 'ИТ'
GROUP BY GROUPS.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
INTERSECT
SELECT
	GROUPS.FACULTY,
	GROUPS.PROFESSION,
	PROGRESS.SUBJECT,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM GROUPS
inner join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE GROUPS.FACULTY = 'ИДиП'
GROUP BY GROUPS.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
ORDER BY [Average_Note] DESC;

-- 9
SELECT
	GROUPS.FACULTY,
	GROUPS.PROFESSION,
	PROGRESS.SUBJECT,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM GROUPS
inner join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE GROUPS.FACULTY = 'ТТЛП'
GROUP BY GROUPS.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
EXCEPT
SELECT
	GROUPS.FACULTY,
	GROUPS.PROFESSION,
	PROGRESS.SUBJECT,
	round(avg(cast(PROGRESS.NOTE as float(2))), 2) [Average_Note]
FROM GROUPS
inner join STUDENT on GROUPS.IDGROUP = STUDENT.IDGROUP
inner join PROGRESS on STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
WHERE GROUPS.FACULTY = 'ИДиП'
GROUP BY GROUPS.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
ORDER BY [Average_Note] DESC;

-- 10
SELECT
	a.SUBJECT,
	(
		SELECT count(*)
		FROM PROGRESS b
		WHERE a.SUBJECT = b.SUBJECT
			and b.NOTE in (8, 9)
	) [Count]
FROM PROGRESS a
GROUP BY a.SUBJECT, a.NOTE
HAVING a.NOTE in (8, 9)
ORDER BY [Count] DESC;